[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [{include-group = "lint"}, {include-group = "release"}]
lint = ["ruff"]
release = ["bumpver"]

[project]
name = "telentfy"
description = "Library for sending simple text notifications to ntfy.sh and Telegram channels."
authors = [{ name = "ljbcloud", email = "206458089+ljbcloud@users.noreply.github.com" }]
license = { file = "LICENSE" }
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "aiohttp (>=3.11.18,<4.0.0)",
    "pydantic-settings (>=2.7.0,<3.0.0)",
    "typer>=0.16.0",
]

[project.scripts]
telentfy = "telentfy.cli:main"

[tool.bumpver]
current_version = "0.0.4"
version_pattern = "MAJOR.MINOR.PATCH"
# below fields are optional, default value is false
commit_message = "chore: update version {old_version} -> {new_version}"
commit = true # creates a new commit for the version update with the above defined message
push = false # pushes the commit automatically to github
tag = true # creates a new tag for the version update

[tool.bumpver.file_patterns]
"README.md" = [
    "telentfy=={version}"
]
"src/telentfy/__init__.py" = [
    '__version__ = "{version}"$',
]
"pyproject.toml" = [
    '^current_version = "{version}"$'
]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.ruff]
line-length = 99
src = ["src"]
# Ruff will automatically exclude all files listed in .gitignore as well as common temporary Python
# tool directories.
# To exclude additional folders, use extend-exclude.

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT", # flake-pytest-style
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
extend-ignore = [
    "RUF005",
    "RUF012",
]
unfixable = [
    # Disable removing unused imports by default and only enable within nox so editors don't delete
    # unused imports while the user is in the middle of editing a file on save.
    "F401",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
split-on-trailing-comma = false
# For non-src directory projects, explicitly set top level package names:
# known-first-party = ["my-app"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-bugbear]
# This is only needed if Typer is a dependency of the project.
extend-immutable-calls = ["typer.Argument"]

[tool.uv-dynamic-versioning]
enable = true
pattern = "default-unprefixed"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif branch == "main" -%}
      {{ serialize_pep440(bump_version(base), stage, revision, dev=distance) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
